{
  "name": "multiparter",
  "version": "0.1.4",
  "description": "multipart/form-data POST request maker for nodejs",
  "keywords": [
    "multipart/form-data",
    "multipart",
    "form-data",
    "POST"
  ],
  "author": {
    "name": "Ian Babrou",
    "email": "ibobrik@gmail.com"
  },
  "engines": [
    "node"
  ],
  "dependencies": {
    "async": "0.1.15",
    "underscore": "1.2.1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Sonetica/multiparter.git"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./index",
  "readme": "# nodejs module to make POST file uploads\n\nModule allows to send POST requests with `Content-type: multipart/form-data`\nwith files and any [readable streams](http://nodejs.org/docs/v0.6.0/api/streams.html#readable_Stream).\n\n## Installation\n\n`npm install multiparter`\n\n## API\n\n* `var request = new multiparter.request(protocol, options)`\n\n    Create request object. For protocol you may pass `http` or `https` module,\n    `options` is request options object just like for `http.request`.\n\n* `request.setParam(field, value)`\n\n    Set plain field value for your request.\n\n* `request.addStream(field, fileName, mimeType, streamLength, stream)`\n\n    Add stream to request and assign it to specified field.\n    Stream must have mime type (pass `application/octet-stream` if unsure)\n    and length to calculate request length without loading whole stream data into memory.\n\n* `request.send(callback)`\n\n    Send request and receive `error` as first argument of callback\n    and `response` as second (usual [http.ClientResponse](http://nodejs.org/docs/v0.6.0/api/http.html#http.ClientResponse)\n    or [https.ClientResponse](http://nodejs.org/docs/v0.6.0/api/https.html#https.ClientResponse) object)\n\n## Example\n\n```javascript\nvar fs          = require(\"fs\");\nvar http        = require(\"http\");\nvar multiparter = require(\"multiparter\");\n\n// test host, but it works\nvar request = new multiparter.request(http, {\n    host: \"bobrik.name\",\n    port: 80,\n    path: \"/test2.php\",\n    method: \"POST\"\n});\n\n// add some plain params here\nrequest.setParam(\"here\", \"we are\");\nrequest.setParam(\"again\", \"ok bye!\");\n\n// add files you need with readable stream\n// don't forget to crete file test.txt\nrequest.addStream(\n    \"myfile\",\n    \"test.txt\",\n    \"text/plain\",\n    19,\n    fs.createReadStream(\"test.txt\")\n);\n\n// send request and receive response\nrequest.send(function(error, response) {\n    if (error) {\n        console.log(error);\n    }\n\n    var data = \"\";\n\n    response.setEncoding(\"utf8\");\n\n    response.on(\"data\", function(chunk) {\n        data += chunk;\n    });\n\n    response.on(\"end\", function() {\n        console.log(\"Data: \" + data);\n    });\n\n    response.on(\"error\", function(error) {\n        console.log(error);\n    });\n});\n```\n\n## Authors\n- Ian Babrou (ibobrik@gmail.com)",
  "_id": "multiparter@0.1.4",
  "_from": "multiparter"
}
